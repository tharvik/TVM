/* This program gives back a list of primes generated by bruteforce */
/* Author : Mathieu Demarne, 2013 */

object PrimeListing {
    def main() : Unit = {
        if (!(new PrimeGenerator().next(200, 20))) {
            println("End !");
        }
    }
}
class PrimeGenerator {
    /* Is called recursively to find the next prime */
    def next(nl : Int, nb : Int) : Bool = {

        var half : Int;
        /* Dummy variable for function's next() return value */
        var ret : Bool;
        
        half = nl / 2;
         
        /* Test if prime.*/
        if (!(half * 2 == nl) && this.test(nl, half, 3)) {
                println(nl); 
                nb = nb -1 ;            
        }
        if (0 < nb) {    
            ret = this.next(nl+1, nb);
        }
        
        return true;
    }
    
    /* Test if a function is prime via a bruteforce mode until its half. */
    def test(nl : Int, half : Int, start : Int) : Bool = {
        var ret : Bool;
        
        ret = true;
        if ((nl / start) * start == nl) {
            ret = false;
        } else {
            if (start + 2 < half) {
                ret = this.test(nl, half, start + 2);
            }
        }
        return ret;
        
    }
}
